<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TargetFramework>netcoreapp3.1</TargetFramework>
        <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
        <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
        <IsPackable>false</IsPackable>
        <SpaRoot>client\</SpaRoot>
        <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="BCrypt-Official" Version="0.1.109" />
        <PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="3.1.0" />
        <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.1.2" />
        <PackageReference Include="Microsoft.EntityFrameworkCore" Version="5.0.0-preview.2.20120.8" />
        <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="5.0.0-preview.2.20120.8" />
        <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="5.0.0-preview.2.20120.8" />
        <PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer.Design" Version="2.0.0-preview1-final" />
        <PackageReference Include="Microsoft.EntityFrameworkCore.Tools.DotNet" Version="2.0.3" />
        <PackageReference Include="System.IdentityModel.Tokens.Jwt" Version="6.5.0" />
    </ItemGroup>

    <ItemGroup>
        <!-- Don't publish the SPA source files, but do show them in the project files list -->
        <Content Remove="$(SpaRoot)**" />
        <Content Include="client\src\assets\olx-logo.svg" />
        <Content Include="client\src\components\custom-button\custom-button.component.jsx" />
        <Content Include="client\src\components\custom-button\custom-button.styles.jsx" />
        <Content Include="client\src\components\form-input\form-input.component.jsx" />
        <Content Include="client\src\components\form-input\form-input.styles.scss" />
        <Content Include="client\src\components\header\header.component.jsx" />
        <Content Include="client\src\components\header\header.styles.scss" />
        <Content Include="client\src\components\sign-in\sign-in.component.jsx" />
        <Content Include="client\src\components\sign-in\sign-in.styles.scss" />
        <Content Include="client\src\components\sign-up\sign-up.component.jsx" />
        <Content Include="client\src\components\sign-up\sign-up.styles.scss" />
        <Content Include="client\src\pages\contact\contact.component.jsx" />
        <Content Include="client\src\pages\contact\contact.styles.scss" />
        <Content Include="client\src\pages\explore\explore.component.jsx" />
        <Content Include="client\src\pages\explore\explore.styles.scss" />
        <Content Include="client\src\pages\homepage\homepage.component.jsx" />
        <Content Include="client\src\pages\homepage\homepage.styles.scss" />
        <Content Include="client\src\pages\sign-in-and-up\sign-in-and-up.component.jsx" />
        <Content Include="client\src\pages\sign-in-and-up\sign-in-and-up.styles.scss" />
    </ItemGroup>

    <ItemGroup>
      <_ContentIncludedByDefault Remove="Pages\Error.cshtml" />
      <_ContentIncludedByDefault Remove="Pages\_ViewImports.cshtml" />
      <_ContentIncludedByDefault Remove="Properties\launchSettings.json" />
    </ItemGroup>

    <ItemGroup>
      <None Remove="client\src\pages\admin\ceva.component.jsx" />
      <None Remove="client\src\components\product-preview\product-preview.container.jsx" />
    </ItemGroup>
    
    <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
        <!-- Ensure Node.js is installed -->
        <Exec Command="node --version" ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
        </Exec>
        <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
        <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    </Target>

    <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
        <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->

        <!-- Include the newly-built files in the publish output -->
        <ItemGroup>
            <DistFiles Include="$(SpaRoot)build\**" />
            <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
                <RelativePath>%(DistFiles.Identity)</RelativePath>
                <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
                <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
            </ResolvedFileToPublish>
        </ItemGroup>
    </Target>

</Project>
